---
// src/pages/index.astro
import MainLayout from "../layouts/MainLayout.astro";
import Navigation from "../components/Navigation.astro";
import { getCollection } from "astro:content";

// Fetch and sort blog posts
const blogPosts = await getCollection("blog");
const sortedPosts = blogPosts.sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
const featuredPost = sortedPosts[0]; // Get the latest post as featured

// Project data
const projects = [
  {
    title: "SoftwareSelectHQ",
    description:
      "Find the Perfect Software for Your Business. 150+ premium software products to compare and to choose from.",
    link: "https://softwareselecthq.com",
    github: "",
    tags: ["Astro", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "XGPT.tech",
    description:
      "Discover the Best AI Tools. Find and compare cutting-edge AI tools to enhance your productivity. From chatbots to image generation, we've got you covered.",
    link: "https://xgpt.tech",
    github: "",
    tags: ["Astro", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "SmartDM",
    description:
      "Automate Your Instagram DMs with AI-Powered Responses. Boost engagement, capture leads, and grow your business on autopilot with SmartDM's 24/7 AI chatbot.",
    link: "",
    github: "",
    tags: ["NextJS", "Tailwind", "TypeScript", "AI"],
    status: "Beta",
  },
  {
    title: "MVP Studio",
    description:
      "Fixed-price MVP development for B2B, SaaS, and early-stage startups. No hidden costs. No endless meetings. Just results.",
    link: "https://mvpstudio.agency",
    github: "",
    tags: ["NextJS", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "SmartVyapaar",
    description:
      "India's Complete Business Automation Solution - From Excel Chaos to AI-Powered Profits. Transform your SME into a profitable, automated enterprise.",
    link: "https://smartvyapaar.in",
    github: "",
    tags: ["NextJS", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "AlphaVerse",
    description:
      "Complete Math Learning Platform For Children Upto high school from India. Over 1000+ students use it.",
    link: "https://alphaverse.in",
    github: "",
    tags: ["NextJS", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "AlphaExam",
    description:
      "Take comprehensive mock tests for Mathematical Olympiads, JEE, NEET, and other competitive exams. Join 100,000+ students who trust AlphaExam for their success.",
    link: "https://alphaexam.in",
    github: "",
    tags: ["NextJS", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "NeoInvoice",
    description:
      "NeoInvoice is a free GST invoicing software that helps you track your sales and invoices real-time. With NeoInvoice, you can easily create & share professional invoices.",
    link: "https://neoinvoice.in",
    github: "",
    tags: ["NextJS", "Tailwind", "TypeScript", "AI"],
    status: "Live",
  },
  {
    title: "StudyHop",
    description: "StudyHop is a Discovery and LMS platform for teachers.",
    link: "https://studyhop.com",
    github: "",
    tags: ["Flask", "Falcon", "AWS", "React"],
    status: "Live",
  },
  {
    title: "JSONPost",
    description: "Headless Form Processing",
    link: "https://jsonpost.com",
    github: "",
    tags: ["NextJS", "Supabase", "AWS", "React"],
    status: "Live",
  },
];

// Stats data
const stats = [
  {
    number: "20+",
    label: "Years Experience",
    description: "Building products and leading teams",
  },
  {
    number: "20+",
    label: "Projects Launched",
    description: "From idea to production",
  },
  {
    number: "1M+",
    label: "Users Reached",
    description: "Across various platforms",
  },
];

// Tech stack data
const technologies = [
  { name: "React/NextJS", category: "Frontend" },
  { name: "TypeScript", category: "Language" },
  { name: "Node.js/Python/Go", category: "Backend" },
  { name: "Astro/Svelte/SolidJS", category: "Framework" },
  { name: "PostgreSQL/MySQL/MongoDB", category: "Database" },
  { name: "Tailwind", category: "Styling" },
];
---

<MainLayout title="Home">
  <!-- Navigation -->
  <Navigation />

  <!-- Hero Section -->
  <section class="relative overflow-hidden py-32 px-6">
    <div
      class="absolute inset-0 bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950"
    >
    </div>

    <div class="absolute inset-0 opacity-30">
      <div
        class="absolute top-1/4 left-1/4 w-64 h-64 bg-blue-500/10 rounded-full blur-3xl animate-pulse"
      >
      </div>
      <div
        class="absolute bottom-1/4 right-1/4 w-64 h-64 bg-purple-500/10 rounded-full blur-3xl animate-pulse delay-300"
      >
      </div>
    </div>

    <div class="relative max-w-4xl mx-auto text-center">
      <h1
        class="text-4xl md:text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-white to-slate-400"
      >
        Aditya Singh
      </h1>
      <p class="mt-4 text-xl md:text-2xl text-slate-400">
        Devpreneur & Builder
      </p>
      <div class="mt-8 flex justify-center gap-4">
        <a
          href="#projects"
          class="px-6 py-3 rounded-lg bg-white/10 hover:bg-white/20 transition-colors duration-300 backdrop-blur-sm"
        >
          View Projects
        </a>
        <a
          href="#contact"
          class="px-6 py-3 rounded-lg bg-blue-500/10 hover:bg-blue-500/20 transition-colors duration-300 backdrop-blur-sm text-blue-400"
        >
          Get in Touch
        </a>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="py-16 px-6 bg-slate-900/50">
    <div class="max-w-4xl mx-auto">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {
          stats.map((stat) => (
            <div class="text-center space-y-2 p-6 rounded-lg bg-slate-900/50 backdrop-blur-sm border border-slate-800">
              <div class="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-blue-600">
                {stat.number}
              </div>
              <div class="text-lg font-semibold text-slate-200">
                {stat.label}
              </div>
              <div class="text-sm text-slate-400">{stat.description}</div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- About Section -->
  <section class="py-16 px-6">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-2xl font-bold mb-4">About Me</h2>
      <p class="text-slate-300 leading-relaxed">
        I'm a devpreneur passionate about building innovative solutions. With a
        background in both development and entrepreneurship, I run multiple
        projects that aim to solve real-world problems. I believe in building in
        public and sharing my learnings along the way.
      </p>
    </div>
  </section>

  <!-- Tech Stack -->
  <section class="py-16 px-6 bg-slate-900/50">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-2xl font-bold mb-8">Tech Stack</h2>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {
          [...new Set(technologies.map((tech) => tech.category))].map(
            (category) => (
              <div class="space-y-4">
                <h3 class="text-lg font-semibold text-slate-400">{category}</h3>
                <div class="space-y-2">
                  {technologies
                    .filter((tech) => tech.category === category)
                    .map((tech) => (
                      <div class="p-3 rounded-lg bg-slate-900 border border-slate-800 hover:border-slate-700 transition-colors">
                        <span class="text-slate-300">{tech.name}</span>
                      </div>
                    ))}
                </div>
              </div>
            )
          )
        }
      </div>
    </div>
  </section>

  <!-- Featured Blog Post -->
  <section class="py-16 px-6">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-2xl font-bold mb-8">Featured Essay</h2>
      <a href={`/blog/${featuredPost.slug}`} class="block group">
        <div
          class="relative overflow-hidden rounded-xl bg-slate-900 border border-slate-800 p-8 transition-all duration-300 hover:border-slate-700"
        >
          <div
            class="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
          >
          </div>

          <div class="relative">
            <h3
              class="text-2xl font-bold group-hover:text-blue-400 transition-colors"
            >
              {featuredPost.data.title}
            </h3>

            <p class="mt-4 text-slate-400 line-clamp-3">
              {featuredPost.data.description}
            </p>

            <div class="mt-6 flex items-center gap-4">
              <span class="text-sm text-slate-500">
                {
                  featuredPost.data.date.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })
                }
              </span>

              <span
                class="text-sm text-blue-400 group-hover:translate-x-1 transition-transform duration-300"
              >
                Read more â†’
              </span>
            </div>
          </div>
        </div>
      </a>
    </div>
  </section>

  <!-- Projects Section -->
  <section id="projects" class="py-16 px-6">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-2xl font-bold mb-6">Projects</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {
          projects.map((project) => (
            <div class="bg-slate-900 border border-slate-800 rounded-lg transition-all duration-300 hover:border-slate-700 hover:shadow-lg group overflow-hidden">
              <div class="p-6">
                <div class="flex justify-between items-start">
                  <div>
                    <h3 class="text-xl font-semibold text-slate-50 group-hover:text-blue-400 transition-colors">
                      {project.title}
                    </h3>
                    <p class="text-slate-400 mt-2">{project.description}</p>
                  </div>
                  <span
                    class={`text-xs px-2 py-1 rounded ${
                      project.status === "Live"
                        ? "bg-green-900/30 text-green-400"
                        : "bg-yellow-900/30 text-yellow-400"
                    }`}
                  >
                    {project.status}
                  </span>
                </div>

                <div class="flex flex-wrap gap-2 mt-4">
                  {project.tags.map((tag) => (
                    <span class="text-xs px-2 py-1 rounded bg-slate-800 text-slate-300">
                      {tag}
                    </span>
                  ))}
                </div>

                <div class="flex gap-4 mt-4">
                  <a
                    href={project.link}
                    class="text-sm text-slate-400 hover:text-white transition-colors flex items-center gap-1"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    ðŸ”— Live Demo
                  </a>
                  <a
                    href={project.github}
                    class="text-sm text-slate-400 hover:text-white transition-colors flex items-center gap-1"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <>
                        <path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4" />
                        <path d="M9 18c-4.51 2-5-2-7-2" />
                      </>
                    </svg>
                    Source
                  </a>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Blog Posts Section -->
  <section class="py-16 px-6">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-2xl font-bold mb-6">All Essays & Blog Posts</h2>
      <div class="space-y-4">
        {
          sortedPosts.map((post) => (
            <a href={`/blog/${post.slug}`} class="block group">
              <div class="p-4 rounded-lg transition-all duration-300 group-hover:bg-slate-900">
                <h3 class="text-lg font-semibold group-hover:text-white">
                  {post.data.title}
                </h3>
                <p class="text-sm text-slate-400 mt-1">
                  {post.data.date.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </p>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Contact Section -->
  <section id="contact" class="py-16 px-6 bg-slate-900/50">
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-12">
        <h2 class="text-2xl font-bold mb-4">Get in Touch</h2>
        <p class="text-slate-400">
          Have a project in mind or just want to chat? I'm always open to new
          opportunities and interesting conversations.
        </p>
      </div>

      <div class="max-w-2xl mx-auto">
        <form id="contact-form" class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label
                for="name"
                class="block text-sm font-medium text-slate-300 mb-2"
              >
                Name *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-4 py-3 rounded-lg bg-slate-800 border border-slate-700 text-slate-100 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                placeholder="Your name"
              />
            </div>
            <div>
              <label
                for="email"
                class="block text-sm font-medium text-slate-300 mb-2"
              >
                Email *
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full px-4 py-3 rounded-lg bg-slate-800 border border-slate-700 text-slate-100 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                placeholder="your@email.com"
              />
            </div>
          </div>

          <div>
            <label
              for="subject"
              class="block text-sm font-medium text-slate-300 mb-2"
            >
              Subject
            </label>
            <input
              type="text"
              id="subject"
              name="subject"
              class="w-full px-4 py-3 rounded-lg bg-slate-800 border border-slate-700 text-slate-100 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
              placeholder="What's this about?"
            />
          </div>

          <div>
            <label
              for="message"
              class="block text-sm font-medium text-slate-300 mb-2"
            >
              Message *
            </label>
            <textarea
              id="message"
              name="message"
              rows="6"
              required
              class="w-full px-4 py-3 rounded-lg bg-slate-800 border border-slate-700 text-slate-100 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 resize-vertical"
              placeholder="Tell me about your project or just say hello..."
            ></textarea>
          </div>

          <div class="text-center">
            <button
              type="submit"
              id="submit-btn"
              class="inline-flex items-center gap-2 px-8 py-3 rounded-lg bg-blue-500 hover:bg-blue-600 disabled:bg-slate-600 disabled:cursor-not-allowed transition-all duration-300 font-medium"
            >
              <span id="submit-text">Send Message</span>
              <svg
                id="submit-icon"
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="m22 2-7 20-4-9-9-4Z"></path>
                <path d="M22 2 11 13"></path>
              </svg>
              <!-- Loading spinner (hidden by default) -->
              <svg
                id="loading-spinner"
                class="animate-spin hidden"
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M21 12a9 9 0 11-6.219-8.56"></path>
              </svg>
            </button>
          </div>

          <!-- Success/Error Messages -->
          <div id="form-message" class="hidden text-center p-4 rounded-lg">
          </div>
        </form>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("contact-form");
        const submitBtn = document.getElementById("submit-btn");
        const submitText = document.getElementById("submit-text");
        const submitIcon = document.getElementById("submit-icon");
        const loadingSpinner = document.getElementById("loading-spinner");
        const formMessage = document.getElementById("form-message");

        // Replace with your actual backend URL
        const BACKEND_URL =
          "https://jsonpost.com/api/submit/a01a3279-85a5-4692-9cfe-b36f39cf5d83/contact-form";

        form.addEventListener("submit", async function (e) {
          e.preventDefault();

          // Get form data
          const formData = new FormData(form);
          const data = {
            name: formData.get("name"),
            email: formData.get("email"),
            subject: formData.get("subject"),
            message: formData.get("message"),
          };

          // Show loading state
          setLoadingState(true);
          hideMessage();

          try {
            const response = await fetch(BACKEND_URL, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data),
            });

            if (response.ok) {
              showMessage(
                "Thank you! Your message has been sent successfully. I'll get back to you soon.",
                "success"
              );
              form.reset();
            } else {
              throw new Error("Failed to send message");
            }
          } catch (error) {
            console.error("Error sending message:", error);
            showMessage(
              "Sorry, there was an error sending your message. Please try again or contact me directly via email.",
              "error"
            );
          } finally {
            setLoadingState(false);
          }
        });

        function setLoadingState(loading) {
          if (loading) {
            submitBtn.disabled = true;
            submitText.textContent = "Sending...";
            submitIcon.classList.add("hidden");
            loadingSpinner.classList.remove("hidden");
          } else {
            submitBtn.disabled = false;
            submitText.textContent = "Send Message";
            submitIcon.classList.remove("hidden");
            loadingSpinner.classList.add("hidden");
          }
        }

        function showMessage(message, type) {
          formMessage.textContent = message;
          formMessage.className = `text-center p-4 rounded-lg ${
            type === "success"
              ? "bg-green-900/30 text-green-400 border border-green-800"
              : "bg-red-900/30 text-red-400 border border-red-800"
          }`;
          formMessage.classList.remove("hidden");
        }

        function hideMessage() {
          formMessage.classList.add("hidden");
        }
      });
    </script>
  </section>
</MainLayout>
